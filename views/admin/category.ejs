<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Category Page</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://kit.fontawesome.com/16d4885483.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.14.2/dist/sweetalert2.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
  
    <style>
        /* Main content area styling */
        .main-content {
            margin-left: 250px;
            padding: 20px;
            background-color: #f7f7f7;
            min-height: 100vh;
        }

        /* Box for adding a category */
        .category-box {
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        .category-box input, 
        .category-box textarea {
            border: 2px solid #6e7e6e;
            border-radius: 5px;
            margin-bottom: 15px;
        }

        .category-box button {
            background-color: #8da7ab;
            color: white;
            border-radius: 5px;
        }

        /* Table styles */
        .table {
            background-color: #ffffff;
        }

        .table thead {
            background-color: #6e7e6e;
            color: white;
        }

        .table-hover tbody tr:hover {
            background-color: #f2f2f2;
        }

        /* Button styles for table */
        .btn-add-offer, .btn-remove-offer {
            background-color: #5bc0de;
            color: white;
            border: none;
            margin-right: 5px;
        }

        .btn-listed, .btn-unlisted {
            border: none;
            padding: 3px 8px;
            border-radius: 3px;
            margin-right: 5px;
        }

        .btn-listed {
            background-color: #5cb85c;
            color: white;
        }

        .btn-unlisted {
            background-color: #ff4c4c;
            color: white;
        }

        .btn-list, .btn-unlist {
            padding: 5px 10px;
            border-radius: 5px;
        }

        .btn-list {
            background-color: #5cb85c;
            color: white;
        }

        .btn-unlist {
            background-color: #ff4c4c;
            color: white;
        }

        .btn-edit {
            background-color: #8da7ab;
            color: white;
            border-radius: 5px;
        }
        .pagination-container {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 20px 0; /* Space above and below */
}

.pagination-link, .current-page {
    padding: 10px 15px;
    margin: 0 5px; /* Space between links */
    text-decoration: none;
    border: 1px solid #6e7e6e; /* Border color */
    border-radius: 5px; /* Rounded corners */
    color: #6e7e6e; /* Text color */
    background-color: white; /* Background color */
    transition: background-color 0.3s, color 0.3s; /* Transition for effects */
}

.pagination-link:hover {
    background-color: #6e7e6e; /* Change background on hover */
    color: white; /* Change text color on hover */
}

.current-page {
    background-color: #8da7ab; /* Highlight current page */
    color: white; /* Text color for current page */
    border: none; /* Remove border for the current page */
}
.status-listed {
    background-color: #5cb85c; /* Green color */
    color: white;
    padding: 5px 10px;
    border-radius: 5px;
    margin-right: 5px;
    font-size: 0.9rem;
}

.status-unlisted {
    background-color: #ff4c4c; /* Red color */
    color: white;
    padding: 5px 10px;
    border-radius: 5px;
    font-size: 0.9rem;
}
.list{
    text-decoration: none;
}


    </style>
</head>
<body>
    <!-- Include Header-Sidebar Partial -->
    <%- include('../../views/partials/admin/header') %>

    <main class="main-content">
        <div class="container">
            <h2 class="mb-4">Manage Categories</h2>

            <!-- Search Section -->
            <div class="search-section mb-4">
                <form class="d-flex">
                    <input class="form-control me-2" type="search" placeholder="Search by category name" aria-label="Search">
                    <button class="btn btn-outline-success" type="submit">Search</button>
                </form>
            </div>

            <!-- Category Box -->
            <div class="row">
                <div class="col-md-4">
                    <div class="category-box">
                        <h5>Add New Category</h5>
                        <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
                            <input type="text" id="name" class="form-control" placeholder="Category Name" name="name" required>
                            <div id="elementId" class="error-message text-danger" style="display:none;"></div>
                            <textarea class="form-control" id="description"  rows="4" placeholder="Category Description" required></textarea>
                            <button type="submit" class="btn mt-3">Create Category</button>
                        </form>
                    </div>
                </div>

                <!-- Category Table -->
                <div class="col-md-8">
                    <div class="category-box">
                        <h5>Category List</h5>
                        <table class="table table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Description</th>
                                    <th>Offer Price</th>
                                    <th>Offer</th>
                                    <th>Status</th>
                                    <th>List/Unlist</th>
                                    <th>Edit</th>
                                </tr>
                            </thead>
                            <tbody>
                                <%cat.reverse().forEach((category,index)=>{%>
                                <tr>
                                    <td><%=category.name%></td>
                                    <td><%=category.description%></td>
                                    <td>
                                    <%if(category.categoryOffer){%>
                                        <%=category.categoryOffer%> %
                                        <%}else{%>
                                            0%
                                            <%}%>
                                    </td>
                                    <td>
                                        <%if(category.categoryOffer===0){%>
                                        <button class="btn btn-add-offer btn-sm" onclick="addOffer('<%=category._id%>')">Add Offer</button>
                                        <%}else {%>
                                        <button class="btn btn-remove-offer btn-sm" onclick="removeOffer('<%=category._id%>')" >Remove Offer</button>
                                        <%}%>
                                    </td>
                                    <td><%if(category.isListed){%>
                                        <span class="status-listed">Listed</span>
                                        <%}else{%>
                                        <span class="status-unlisted">Unlisted</span>
                                        <%}%>
                                    </td>
                                    
                                    <td>
                                        <%if(category.isListed){%>
                                        <button class="btn btn-unlist btn-sm "  >
                                            <a class="list" href="/admin/listCategory?id=<%=category.id%>">Unlist</a>
                                        </button>
                                        <%}else{%>
                                        <button class="btn btn-list btn-sm">
                                            <a class="list" href="/admin/unlistCategory?id=<%=category.id%>">list</a>
                                        </button>
                                        <%}%>
                                    </td>
                                    <td>
                                        <button class="btn btn-edit btn-sm">
                                            <a href="/admin/editCategory?id=<%=category.id%>">Edit</a>
                                        </button>
                                    </td>
                                </tr>
                                <%})%>
                                <!-- Repeat more rows as necessary -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="pagination-container">
            <% if (currentPage > 1) { %>
            <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
            <% } %> <% for (let i = 1; i <= totalPages; i++) { %> <% if (i ===
            currentPage) { %>
            <span class="current-page"><%= i %></span>
            <% } else { %>
            <a href="?page=<%= i %>"><%= i %></a>
            <% } %> <% } %> <% if (currentPage < totalPages) { %>
            <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
            <% } %>
          </div>
      
    </main>

    <!-- Bootstrap JS and FontAwesome -->
   
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>

        function handleFormSubmit(event){

            event.preventDefault()

            if(!validateForm()){
                return 

            }
            const name=document.getElementsByName("name")[0].value
            const description=document.getElementById("description").value

            fetch("/admin/addCategory",{
                method:"POST",
                headers:{
                    "content-type":"application/json"
                },
                body:JSON.stringify({name,description})
            })
            .then(response=>{
                if(!response.ok){
                    return response.json().then(err=>{
                        throw new Error(err.error)
                    })
                }
                return response.json()
            })
            .then(data=>{
                location.reload()
            })
            .catch(error=>{
                if(error.message==="Category already exists"){
                    Swal.fire({
                        icon:'error',
                        title:"Oops",
                        text:"Category already exists"
                    })
                }else{
                    Swal.fire({
                        icon:"error",
                        title:"Oops",
                        text:"An error occured while adding the category"
                    })
                }
            })
        }


        function validateForm(){
            clearErrorMessages()
            const name= document.getElementsByName("name")[0].value.trim()
            const description= document.getElementById("description").value.trim()
            isValid=true


            if(name===""){
                displayErrorMessage("name-error", "Please Enter a Name")
                isValid=false
            }else if (!/^[a-zA-Z\s]+$/.test(name)){
                displayErrorMessage("name-error","Category name should contain only alphabetic characters")
                isValid:false
            }
            if(description===""){
                displayErrorMessage("description-error", "Please Enter a description")
                isValid=false
            }
            return isValid;

        }

        function displayErrorMessage(elementId,message){
            var errorElement=document.getElementById(elementId)
            errorElement.innerText=message
            errorElement.style.display="block"
        }

        function clearErrorMessages(){
            const error_elements=document.getElementsByClassName("error-message")
            Array.from(error_elements).forEach((element)=>{
                element.innerText=""
                element.style.display="none"
            })
        }

        async function addOffer(categoryId){
            const {value:amount}=await Swal.fire({
                title:"Offer in percentage",
                input:"number",
                inputLabel:"Percentage",
                inputPlaceholder:"%"
            })
            if(amount){
                try {
                   const response=await fetch("/admin/addCategoryOffer",{
                    method:"POST",
                    headers:{
                        'content-type':"application/json",
                    },
                    body:JSON.stringify({
                        percentage:amount,
                        categoryId:categoryId,
                    }),
                   })
                   const data=await response.json()
                   if(response.ok && data.status===true){
                    Swal.fire(
                        "Offer Added",
                        "The offer has been added",
                        "success"
                        
                    ).then(()=>{
                        location.reload()
                    })
                    
                   }else{
                    Swal.fire("Failed",data.message || "Adding offer failed")
                   }
                   

                } catch (error) {
                    Swal.fire(
                        "Error",
                        "An error occured while adding the offer"
                    )
                    console.log("Error adding offer",error)
                    
                }
            }
        }

        async function removeOffer(categoryId){
            try {
                const response=await fetch("/admin/removeCategoryOffer",{
                    method:"POST",
                    headers:{
                        "content-type":"application/json",

                    },
                    body:JSON.stringify({
                        categoryId:categoryId,
                    })
                })
                const data=await response.json()

                if(response.ok && data.status===true){
                    Swal.fire(
                        "Offer removed",
                        "The offer has been removed",
                        "Success"
                    ).then(()=>{
                        location.reload()
                    })
                }else{
                    Swal.fire("Failed",data.message || "Removing offer failed","error")
                }
                
            } catch (error) {
                Swal.fire(
                    "Error",
                    "An error occured while removing the offer",
                    "offer"
                )
                console.error("Error removing offer",error)
            }
        }

    </script>
     <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
     <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

</body>
</html>
