<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>OTP Verification - FurniNest</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    body {
      background-color: #f8f9fa;
      font-family: Arial, sans-serif;
    }
    .otp-container {
      max-width: 400px;
      margin: 50px auto;
      padding: 20px;
      border-radius: 8px;
      background-color: #fff;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
    .form-label {
      font-weight: 600;
    }
    .btn-primary, .btn-secondary {
      width: 100%;
    }
    .btn-secondary {
      margin-top: 10px;
    }
    .error-message {
      color: red;
      font-size: 14px;
      margin-top: 5px;
    }
    .timer {
      font-size: 14px;
      margin-top: 10px;
      color: #6c757d;
    }
    .resend-disabled {
      background-color: #ccc !important;
      cursor: not-allowed !important;
    }
  </style>
</head>
<body>
  <div class="otp-container">
    <h3 class="text-center mb-4">OTP Verification</h3>
    <form id="otpForm">
      <div class="mb-3">
        <label for="otp" class="form-label">Enter OTP</label>
        <input 
          type="text" 
          class="form-control" 
          id="otp" 
          name="otp" 
          placeholder="Enter the OTP sent to your email" 
          maxlength="6"
          required
        >
        <% if (locals.message && message.length > 0) { %>
          <div class="alert alert-danger mt-3">
            <%= message %>
          </div>
        <% } %>
        <div id="otpError" class="error-message"></div>
      </div>
      <button type="button" class="btn btn-primary" id="verifyOtpButton">Verify OTP</button>
    </form>

    <button id="resendOtpButton" class="btn btn-secondary resend-disabled" disabled>Resend OTP</button>
    <div id="timer" class="timer text-center">Resend OTP in 60 seconds</div>
  </div>

  <script>
    // Timer functionality
    let timer = 60; // Initial timer in seconds
    const timerDisplay = document.getElementById('timer');
    const resendButton = document.getElementById('resendOtpButton');

    function startTimer() {
      const interval = setInterval(() => {
        timer--;
        if (timer <= 0) {
          clearInterval(interval);
          timerDisplay.textContent = 'You can now resend the OTP.';
          resendButton.disabled = false;
          resendButton.classList.remove('resend-disabled');
        } else {
          timerDisplay.textContent = `Resend OTP in ${timer} seconds`;
        }
      }, 1000);
    }

    // Handle Resend OTP action
    resendButton.addEventListener('click', function () {
      // Send a POST request to the backend to resend the OTP
      fetch('/resend-forgot-otp', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ /* Optional: Send any necessary data to resend OTP */ }),
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            Swal.fire({
              icon: 'info',
              title: 'OTP Resent',
              text: 'A new OTP has been sent to your registered email.',
              timer: 2000,
              showConfirmButton: false
            });
            timer = 60; // Reset the timer
            resendButton.disabled = true;
            resendButton.classList.add('resend-disabled');
            timerDisplay.textContent = 'Resend OTP in 60 seconds';
            startTimer();
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'There was an issue resending the OTP. Please try again later.',
            });
          }
        })
        .catch((error) => {
          console.error('Error:', error);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'There was a problem resending the OTP. Please try again later.',
          });
        });
    });

    // Start the timer when the page loads
    startTimer();

    // OTP Validation and AJAX Submission
    document.getElementById('verifyOtpButton').addEventListener('click', function () {
      const otpInput = document.getElementById('otp');
      const otpError = document.getElementById('otpError');
      const otp = otpInput.value.trim();

      // OTP validation: Check if it is a 6-digit number
      const otpRegex = /^\d{6}$/;

      if (!otpRegex.test(otp)) {
        otpError.textContent = 'Please enter a valid 6-digit OTP.';
        otpInput.classList.add('is-invalid');
        return false;
      } else {
        otpError.textContent = ''; // Clear error message
        otpInput.classList.remove('is-invalid');

        // Send OTP to backend via AJAX
        fetch('/verify-forgot-otp', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ otp: otp }), // Pass OTP to backend
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.success) {
              // OTP verified
              Swal.fire({
                icon: 'success',
                title: 'OTP Verified',
                text: 'Your OTP has been verified successfully!',
                confirmButtonText: 'OK',
              }).then(() => {
                window.location.href = data.redirectUrl; // Update redirect URL
              });
            } else {
              // OTP invalid
              Swal.fire({
                icon: 'error',
                title: 'Invalid OTP',
                text: 'The OTP you entered is incorrect. Please try again.',
              });
            }
          })
          .catch((error) => {
            console.error('Error:', error);
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'There was a problem verifying the OTP. Please try again later.',
            });
          });
      }
    });
  </script>
</body>
</html>
